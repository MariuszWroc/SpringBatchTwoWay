<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:batch="http://www.springframework.org/schema/batch" 
	xmlns:task="http://www.springframework.org/schema/task"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://www.springframework.org/schema/batch
	http://www.springframework.org/schema/batch/spring-batch-2.2.xsd
	http://www.springframework.org/schema/beans 
	http://www.springframework.org/schema/beans/spring-beans-3.2.xsd">
 
  <bean id="city" class="com.mkyong.model.City" scope="prototype" />
  <bean id="report" class="com.mkyong.model.Report" scope="prototype" />
 
  <batch:job id="exportJob">
	<batch:step id="step1" next="step2">
	  <batch:tasklet>
		<batch:chunk reader="cvsCityReader" writer="mysqlCityWriter" processor="itemCityProcessor"
			commit-interval="2">
		</batch:chunk>
	  </batch:tasklet>
	</batch:step>
        <batch:step id="step2">
	  <batch:tasklet allow-start-if-complete="true">
		<batch:chunk reader="cvsReportReader" writer="mysqlReportWriter" processor="itemReportProcessor"
			commit-interval="2">
		</batch:chunk>
	  </batch:tasklet>
	</batch:step>
  </batch:job>
  
    <!-- Optional ItemProcessor to perform business logic/filtering on the input records -->
  <bean id="itemCityProcessor" class="com.mkyong.model.CityItemProcessor" />
  <bean id="itemReportProcessor" class="com.mkyong.model.ReportItemProcessor" />
  
  <bean id="cvsCityReader" class="org.springframework.batch.item.file.FlatFileItemReader">
 
	<!-- Read a csv file -->
	<property name="resource" value="classpath:csv/city.csv" />
 
        <property name="lineMapper">
            <bean class="org.springframework.batch.item.file.mapping.DefaultLineMapper">
                <!-- split it -->
                <property name="lineTokenizer">
                    <bean
                        class="org.springframework.batch.item.file.transform.DelimitedLineTokenizer">
                         <property name="delimiter" value="|"/>
                        <property name="names" value="id, code, name" />
                    </bean>
                </property>
                <property name="fieldSetMapper">   
                    <bean
                        class="org.springframework.batch.item.file.mapping.BeanWrapperFieldSetMapper">
                        <property name="prototypeBeanName" value="city" />
                    </bean>			
                </property>
 
            </bean>
        </property>
 
  </bean>
  
  <bean id="mysqlCityWriter"
          class="org.springframework.batch.item.database.JdbcBatchItemWriter">
      <property name="dataSource" ref="dataSource" />
      <property name="sql" value="INSERT INTO CITY VALUES(:id, :code, :name)">
      </property>
      <!-- It will take care matching between object property and sql name parameter -->
      <property name="itemSqlParameterSourceProvider">
          <bean class="org.springframework.batch.item.database.BeanPropertyItemSqlParameterSourceProvider" />
      </property>
  </bean>
  
  <bean id="cvsReportReader" class="org.springframework.batch.item.file.FlatFileItemReader">
 
      <!-- Read a csv file -->
      <property name="resource" value="classpath:csv/report.csv" />
 
      <property name="lineMapper">
          <bean class="org.springframework.batch.item.file.mapping.DefaultLineMapper">
              <!-- split it -->
              <property name="lineTokenizer">
                  <bean
                      class="org.springframework.batch.item.file.transform.DelimitedLineTokenizer">
                      <property name="delimiter" value="|"/>
                      <property name="names" value="date, impressions, clicks, earning" />
                  </bean>
              </property>
              <property name="fieldSetMapper">   
                  <bean
                      class="org.springframework.batch.item.file.mapping.BeanWrapperFieldSetMapper">
                      <property name="prototypeBeanName" value="report" />
                  </bean>			
              </property>
 
          </bean>
      </property>
 
  </bean>
 
  <bean id="mysqlReportWriter"
        class="org.springframework.batch.item.database.JdbcBatchItemWriter">
      <property name="dataSource" ref="dataSource" />
      <property name="sql" value="INSERT INTO RAW_REPORT VALUES(:date, :impressions, :clicks, :earning)">
      </property>
      <!-- It will take care matching between object property and sql name parameter -->
      <property name="itemSqlParameterSourceProvider">
          <bean class="org.springframework.batch.item.database.BeanPropertyItemSqlParameterSourceProvider" />
      </property>
  </bean>
 
</beans>